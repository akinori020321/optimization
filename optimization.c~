#include<stdio.h>
#include<stdlib.h>
#include<math.h>

#define N_DATA 200
#define RAND_SEED 20220704
//#define N_TEST_DATA_SET 20

#define SIGMA 0.7
#define P00 0.99
#define P01 0.01
#define P10 0.03
#define P11 0.97

int x[N_DATA];
int xmap[N_DATA];
double y[N_DATA];

int S[N_DATA][2];
double C[N_DATA][2];

double nrnd();
void generate_x();
void generate_y();
void compute_xmap();
void show_results();

int main(int argc, char *argv[]){

  srand48(RAND_SEED);

  generate_x();
  generate_y();
  compute_xmap();
  show_results();

  return 0;
}

double nrnd(){
  static int sw = 0;
  static double r1, r2, s;

  if(sw == 0){
    sw = 1;
    do{
      r1 = 2.0*drand48()-1.0;
      r2 = 2.0*drand48()-1.0;
      s = r1*r1+r2*r2;
    }while(s > 1.0 || s == 0.0);
    s = sqrt(-2.0*log(s)/s);
    return (r1*s);
  }else{
    sw = 0;
    return (r2*s);
  }
}

void generate_x(){
  int i;

  if(drand48() < 0.5){
    x[0] = 0;
  }else{
    x[0] = 1;
  }

  for(i = 1; i < N_DATA; i++){
    if(x[i-1] == 0){
      if(drand48() < P00){
	x[i] = 0;
      }else{
	x[i] = 1;
      }
    }else{
      if(drand48() < P11){
	x[i] = 1;
      }else{
	x[i] = 0;
      }
    }
  }
}

void generate_y(){
  int i;

  for(i = 0; i < N_DATA; i++){
    y[i] = (double)x[i] + SIGMA*nrnd();
  }
}

void compute_xmap(){
  int i;
  double case1, case2, case3, case4;
  C[0][0] = -((y[0]-0)*(y[0]-0))/(2*SIGMA*SIGMA);
  C[0][1] = -((y[0]-1)*(y[0]-1))/(2*SIGMA*SIGMA);
  for(i = 1; i < N_DATA; i++){
    case1 = C[i-1][0] + log(P00) - ((y[i]-0)*(y[i]-0))/(2*SIGMA*SIGMA);
    case2 = C[i-1][0] + log(P01) - ((y[i]-1)*(y[i]-1))/(2*SIGMA*SIGMA);
    case3 = C[i-1][1] + log(P10) - ((y[i]-0)*(y[i]-0))/(2*SIGMA*SIGMA);
    case4 = C[i-1][1] + log(P11) - ((y[i]-1)*(y[i]-1))/(2*SIGMA*SIGMA);
    if(case1 >= case3){
      C[i][0] = case1;
      S[i-1][0] = 0;
    }else{
      C[i][0] = case3;
      S[i-1][0] = 1;
    }
    if(case2 >= case4){
      C[i][1] = case2;
      S[i-1][1] = 0;
    }else{
      C[i][1] = case4;
      S[i-1][1] = 1;
    }
  }
  
  if(case1 >= case3){
    S[N_DATA-1][0] = 0;
  }else{
    S[N_DATA-1][0] = 1;
  }
  if(case2 >= case4){
    S[N_DATA-1][1] = 0;
  }else{
    S[N_DATA-1][1] = 1;
  }
  
  if(C[N_DATA-1][0] >= C[N_DATA-1][1]){
    for(i = 0; i < N_DATA; i++){
      xmap[i] = S[i][0];
    }
  }else{
    for(i = 0; i < N_DATA; i++){
      xmap[i] = S[i][1];
    }
  }
}

void show_results(){
  int i;
  for(i = 0; i < N_DATA; i++){
    printf("%d\t%d\t%.8lf\t%d\n", i, x[i], y[i], xmap[i]+3);
  }
}
